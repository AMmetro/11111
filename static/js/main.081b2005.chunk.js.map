{"version":3,"sources":["n1-main/m1-ui/common/Charts/Charts.module.css","n1-main/m1-ui/common/Currency/Currency.module.css","n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButton.module.css","n1-main/m1-ui/header/Header.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n1-main/m1-ui/common/Eror404.tsx","n1-main/m1-ui/common/Start.tsx","n1-main/m1-ui/common/SuperComponents/SuperButton/SuperButtonContainer.tsx","n1-main/m3-dal/Api.tsx","n1-main/m2-bll/currencyListReducer.ts","n1-main/m1-ui/common/Currency/Currency.tsx","n1-main/m1-ui/common/Charts/DrawChart/DrawChart.tsx","n1-main/m2-bll/currencyChartReducer.ts","n1-main/m1-ui/common/Charts/Charts.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","Header","className","to","Login","Registration","Eror404","Start","SuperButton","red","restProps","finalClassName","style","default","instance","axios","create","baseURL","myAPI","dateQuery","get","currencyId","dateFrom","dateTill","initState","list","date","makeCurrencyListTC","currencyListDate","dispatch","then","res","currencyList","type","addCurrencyListAC","data","Currency","useState","setCurrencyListDate","useSelector","state","currencyListReducer","useDispatch","today","Date","setDate","getDate","toISOString","substr","currPair","map","elem","pairs_table","id","Cur_Abbreviation","Cur_Name","Cur_OfficialRate","console","log","body_container","input_container","input_lable","value","name","defaultValue","onChange","inputDate","document","getElementById","SuperButtonContainer","onClick","toLocaleDateString","DrawCharts","props","canvasRef","useRef","drawChart","ctx","i","lineWidth","strokeStyle","length","beginPath","moveTo","lineTo","stroke","currencyAbbreviation","filter","Cur_ID","fillStyle","font","fillText","useEffect","current","canvas","context","getContext","width","WIDTH","background","height","HEIGHT","currencyChart","currencyChartValue","slice","globalAlpha","drawGrid","chart_container","ref","Charts","setDateFrom","dateUntil","setDateUntil","setCurrencyId","currencyChartReducer","currencyListName","data-currency","dateFromValue","dateUntillValue","rateData","addCurrencyChartAC","makeChartsTC","e","currentTarget","DrawChart","PATH","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.081b2005.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_container\":\"Charts_body_container__3J2f7\",\"input_container\":\"Charts_input_container__IOZAa\",\"pairs_table\":\"Charts_pairs_table__eHFiO\",\"input_lable\":\"Charts_input_lable__3bBb1\",\"chart_container\":\"Charts_chart_container__m8RWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body_container\":\"Currency_body_container__1GRl9\",\"input_container\":\"Currency_input_container__11qib\",\"pairs_table\":\"Currency_pairs_table__2zDl8\",\"input_lable\":\"Currency_input_lable__FABBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__248L6\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Header() {\n\n  return (\n    <div className=\"App\">\n\n        <NavLink to=\"login\">Login</NavLink> &nbsp;\n        <NavLink to=\"registration\">Registration</NavLink> &nbsp;\n        <NavLink to=\"charts\">Charts</NavLink> &nbsp;\n        <NavLink to=\"Currency\">Currency</NavLink> <br/>\n\n        <div><br/></div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\n\n\nfunction Login() {\n\n  return (\n    <div className=\"App\">\n     Login\n        <input/>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\n\n\n\nfunction Registration() {\n\n  return (\n    <div className=\"App\">\n     Registration form\n    </div>\n  );\n}\n\nexport default Registration;\n","import React from 'react';\n\n\nimport './App.css';\n\nfunction Eror404() {\n\n  return (\n    <div className=\"App\">\n      <h1>Page not found</h1>\n    </div>\n  );\n}\n\nexport default Eror404;\n","import React from 'react';\nimport './App.css';\n\nfunction Start() {\n\n  return (\n    <div className=\"App\">\nStart\n    </div>\n  );\n}\n\nexport default Start;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport style from \"./SuperButton.module.css\";\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean,\n    value?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\n                  red,\n                  className,\n                  ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                     }\n) => {\n\n    const finalClassName = `${red ? style.red : style.default} ${className}`;\n\n     return (\n        <button\n            className={finalClassName}\n             {...restProps}\n        >\n            {/*it should lokks like this????*/}\n            {/*{{...restProps}.value}*/}\n\n        </button>\n    );\n}\n\nexport default SuperButton;\n","import axios from 'axios'\n\n\nconst instance = axios.create({\n    baseURL: 'https://www.nbrb.by/api/exrates/',\n\n})\n\n\nexport const myAPI = {\n    getCurensysList(dateQuery:Date) {\n        const promise = instance.get<any>(`rates?ondate=${dateQuery}&periodicity=0`)\n        return promise;\n    },\n\n    getChartData(currencyId:string, dateFrom:string, dateTill:string) {\n        const promise = instance.get<any>(`Rates/Dynamics/${currencyId}?startDate=${dateFrom}&endDate=${dateTill}`)\n        return promise;\n    },\n\n}\n\n\n\n\n\n\n\n","import {myAPI} from \"../m3-dal/Api\";\nimport {Dispatch} from 'redux'\n\nexport type currencyListStateType = {list: any, date:string};\nconst initState:currencyListStateType = {list:[],date:\"\"};\n\nexport const currencyListReducer = (state = initState, action: AddCurrencyListType): currencyListStateType => { // fix any\n    switch (action.type) {\n        case \"setCurrencyList\": {\n              return state={list: [...action.currencyList], date:action.currencyListDate};\n        }\n\n        default: return state;\n    }\n};\n\n// actions-------------------------------------------------------------------\ntype AddCurrencyListType = {type: \"setCurrencyList\", currencyList:any, currencyListDate:string};\nexport const addCurrencyListAC = (currencyList:any, currencyListDate:string): any => {return {type:\"setCurrencyList\", currencyList, currencyListDate}};\n\n\n// thunks-------------------------------------------------------------------\n        export const makeCurrencyListTC = (currencyListDate:any) => {return (dispatch: Dispatch<any>) => {\n        myAPI.getCurensysList(currencyListDate)\n            .then( (res) => {\n                dispatch(addCurrencyListAC([...res.data], currencyListDate) )\n            } )\n\n      }\n    }\n","import React, {ChangeEvent, useState} from \"react\";\nimport style from \"./Currency.module.css\";\nimport SuperButtonContainer from \"../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/store\";\n\nfunction Currency() {\n\n    const [currencyListDate, setCurrencyListDate] = useState<string>(\"\");\n\n    const currencyList=useSelector<AppStoreType,any>(state=>state.currencyListReducer)\n    const dispatch = useDispatch()\n\n    const today = new Date();\n    today.setDate(today.getDate() );\n    const date = today.toISOString().substr(0,10);\n\n      //@ts-ignore\n      const currPair = currencyList.list.map(elem =>\n          <div className={style.pairs_table} id={elem.Cur_Abbreviation}>\n              <span>{elem.Cur_Abbreviation}</span>\n              <span>{elem.Cur_Name}</span>\n              <span>{elem.Cur_OfficialRate}</span>\n          </div> )\n\n\n    const changeCurrencyListDateHandler = ()=>{\n        //@ts-ignore\n        let inputDate=document.getElementById(\"currencyListDate\").value\n        setCurrencyListDate(inputDate)\n    }\n\n    const getCurrencyRate=()=>{\n        dispatch(makeCurrencyListTC(currencyListDate))\n    }\n    console.log(date)\n    return (\n        <div className={style.body_container}>\n\n\n            <div className={style.input_container}>\n                <div className={style.input_lable}>\n                    <span>select a date for get currency rate</span>\n                </div>\n                <div>\n                    <input id=\"currencyListDate\" value={currencyListDate}\n                     type=\"date\" name=\"currencyListDate\"\n                     defaultValue={date}\n                     onChange={changeCurrencyListDateHandler}/>\n                    <SuperButtonContainer\n                        red // пропсу с булевым значением не обязательно указывать true\n                        onClick={getCurrencyRate}>\n                        get\n                    </SuperButtonContainer>\n                </div>\n\n\n            </div>\n\n            {/*<span> {currencyList.date ? currencyList.date : today.getDate() +\"-\"+ (today.getMonth()+1) +\"-\"+ today.getFullYear()} </span>*/}\n            <span> {currencyList.date ? currencyList.date.toLocaleDateString() : date}  </span>\n\n            {currPair}\n\n        </div>\n    );\n}\n\nexport default Currency;\n","import React, {useRef, useEffect} from 'react'\nimport style from \"../Charts.module.css\";\n\nconst WIDTH = 400;\nconst HEIGHT = 200;\nconst DPI_WIDTH = WIDTH * 2;\nconst DPI_HEIGHT = HEIGHT * 2;\n\nconst DrawCharts = (props: any) => {\n\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    // const contextRef = React.useRef<CanvasRenderingContext2D | null>(null);\n\n    const drawChart = (ctx: any, data: any) => {\n        let i = 1\n             ctx!.lineWidth = 3\n             ctx!.strokeStyle = \"yellow\"\n        for (i; i < data.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(...{...data}[i - 1]);\n            ctx.lineTo(...{...data}[i]);\n            ctx.stroke();\n        }\n\n    //@ts-ignore\n    const currencyAbbreviation = props.currencyList.list.filter(elem => elem.Cur_ID === +props.currencyId )\n        if (currencyAbbreviation[0]){\n        ctx.fillStyle = \"#00F\";\n        ctx.strokeStyle = \"#F00\";\n        ctx.font = \"italic 20pt Arial\";\n        ctx.fillText(`${currencyAbbreviation[0].Cur_Abbreviation}`, 200, 30);\n        }\n    }\n\n    const drawGrid = (context:any) => {\n\n        const scaleX = 20;\n        const scaleY = 50;\n        context!.beginPath();\n        for (let i = 0; i < DPI_WIDTH; i = i + scaleX) {\n            context!.moveTo(i, 0)\n            context!.lineTo(i, 140)\n\n            context!.font = \"5pt Arial\";\n            context!.fillText(`${i}`, i, HEIGHT-50);\n        }\n\n        for (let i = 0; i < DPI_HEIGHT; i = i + scaleX) {\n            context!.moveTo(0, i)\n            context!.lineTo(DPI_HEIGHT, i)\n\n            context!.font = \"5pt Arial\";\n            context!.fillText(`${i}`, 0, i);\n        }\n        context!.stroke();\n\n    }\n//---------------------------------------------------------------------------\n\n    useEffect(() => {\n        if (canvasRef.current) {\n            const canvas = canvasRef.current\n            const context = canvas.getContext('2d')\n            canvas.style.width = WIDTH + \"px\"\n            canvas.style.background = \"lightgray\"\n            canvas.style.height = HEIGHT + \"px\"\n\n//---------------------------calc data for Chart----------------------------------------\n           if (props.currencyChart.value) {\n             //@ts-ignore\n             const currencyChartValue = props.currencyChart.value.map(elem =>\n               [+elem.Date.slice(8, 10)*10, elem.Cur_OfficialRate*12]\n                )\n               drawChart(context, currencyChartValue)\n            }\n//------------------------------------------------------------------------------\n            context!.strokeStyle = \"white\"\n            context!.lineWidth = 0.1\n            context!.globalAlpha = 0.5\n            drawGrid(context)\n        }\n    }, [drawChart])\n\n\n    return (<div className={style.chart_container}>\n            <span>chart for period {props.currencyChart.dateFrom} - {props.currencyChart.dateTill}</span>\n            <br/>\n            <canvas ref={canvasRef} {...props}\n                    {...props.currencyChartValue}\n            />\n        </div>\n    )\n}\n\nexport default DrawCharts\n","import {Dispatch} from \"redux\";\nimport {myAPI} from \"../m3-dal/Api\";\n\nexport type currencyChartStateType = {value:[] ,currencyId:any, dateFrom:any, dateTill:any};\nconst initState:currencyChartStateType = {value:[],currencyId:\"\", dateFrom:\"\", dateTill:\"\"};\n\nexport const currencyChartReducer = (state = initState, action: AddCurrencyChartType): currencyChartStateType => { // fix any\n    switch (action.type) {\n        case \"setCurrencyChart\": {\n            return state={value:action.rateData,currencyId:action.currencyId, dateFrom:action.dateFrom, dateTill:action.dateTill};\n        }\n\n        default: return state;\n    }\n};\n\n// actions-------------------------------------------------------------------\n\ntype AddCurrencyChartType = {type: string,rateData:any,currencyId:any, dateFrom:any, dateTill:any};\nexport const addCurrencyChartAC = (rateData:any,currencyId:any, dateFrom:any, dateTill:any): AddCurrencyChartType => {return {type:\"setCurrencyChart\",\n    rateData,currencyId, dateFrom, dateTill}};\n\n//thunks-------------------------------------------------------------------\n\nexport const makeChartsTC = (currencyId:string, dateFrom:string, dateTill:string) => {return (dispatch: Dispatch<any>) => {\n\n    myAPI.getChartData(currencyId, dateFrom, dateTill)\n        .then( (res) => {\n            dispatch(addCurrencyChartAC([...res.data],currencyId, dateFrom, dateTill))\n        } )\n\n}\n}\n\n","import React, {ChangeEvent, ChangeEventHandler, EventHandler, useEffect, useState} from \"react\";\nimport style from \"./Charts.module.css\";\nimport SuperButtonContainer from \"../SuperComponents/SuperButton/SuperButtonContainer\";\nimport {makeCurrencyListTC, currencyListStateType} from \"../../../m2-bll/currencyListReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../../m2-bll/store\";\nimport DrawCharts from \"./DrawChart/DrawChart\";\nimport {makeChartsTC,currencyChartStateType} from \"../../../m2-bll/currencyChartReducer\";\n\n\nfunction Charts() {\n\n    const [dateFrom, setDateFrom] = useState<string>(\"\");\n    const [dateUntil, setDateUntil] = useState<string>(\"\");\n    const [currencyId, setCurrencyId] = useState<string>(\"\");\n\n    const currencyChart=useSelector<AppStoreType,currencyChartStateType>(state=>state.currencyChartReducer)\n    const currencyList=useSelector<AppStoreType,currencyListStateType>(state=>state.currencyListReducer)\n    const dispatch = useDispatch()\n\n    const today = new Date();\n    today.setDate(today.getDate() );\n    const date = today.toISOString().substr(0,10);\n\n    //----------------------------------------------------------------------------------\n    useEffect(() => {\n        dispatch(makeCurrencyListTC(today))\n    },[]);\n    //----------------------------------------------------------------------------------\n\n\n\n    //@ts-ignore\n    const currencyListName = currencyList.list.map(elem =>\n                                    <option key={elem.Cur_Abbreviation}\n                                            data-currency={elem.Cur_Abbreviation}\n                                            value={elem.Cur_ID}\n                                      >\n                                         {elem.Cur_Name}\n                                    </option>\n                                      )\n\n    const selectDropChart = (e:ChangeEvent<HTMLSelectElement>) => {\n        setCurrencyId(e.currentTarget.value)\n       }\n\n       const makeCharts=()=>{\n        dispatch(makeChartsTC(currencyId, dateFrom, dateUntil))\n    }\n\n    const changeDateFromHandler = ()=>{\n        //@ts-ignore\n        let dateFromValue=document.getElementById(\"dateFrom\").value\n        setDateFrom(dateFromValue)\n    }\n\n    const changeDateUntilHandler = ()=>{\n        //@ts-ignore\n        let dateUntillValue=document.getElementById(\"dateUntil\").value\n        setDateUntil(dateUntillValue)\n    }\n\n    return (\n        <div className={style.body_container}>\n\n            <div className={style.input_container}>\n                <div className={style.input_lable}>\n                        <span>select a date period</span>\n                </div>\n                <div>\n                    <input id=\"dateFrom\" value={dateFrom}\n                           type=\"date\" name=\"dateFrom\"\n                           defaultValue={date}\n                           onChange={changeDateFromHandler}/>\n                    <input id=\"dateUntil\" value={dateUntil}\n                           type=\"date\" name=\"dateUntil\"\n                           defaultValue={date}\n                           onChange={changeDateUntilHandler}/>\n                    <SuperButtonContainer\n                        red // пропсу с булевым значением не обязательно указывать true\n                        onClick={makeCharts}>\n                        draw\n                    </SuperButtonContainer>\n                </div>\n\n            </div>\n\n              <select\n                 onChange={selectDropChart}>\n                 <option>Select currency for chart</option>\n                 {currencyListName}\n              </select>\n            <br/>\n\n             <DrawCharts\n                 currencyChart={currencyChart}\n                 currencyList={currencyList}\n                 currencyId={currencyId}\n             />\n\n        </div>\n    );\n}\n\nexport default Charts;\n","import React from \"react\";\nimport Login from \"../../../n2-features/f1-auth/a1-login/Login\";\nimport Registration from \"../../../n2-features/f1-auth/a2-register/Registration\";\nimport Error404 from \"../common/Eror404\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Start from \"../common/Start\";\nimport Currency from \"../common/Currency/Currency\";\nimport Charts from \"../common/Charts/Charts\";\n\n\n\nexport const PATH = {\n    START: \"/start\",\n    REDUX: \"/redux\",\n    LOGIN: \"/login\",\n    REGISTRATION: \"/registration\",\n    CHARTS: \"/charts\",\n    CURRENCY: \"/currency\"\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n          <Switch>\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.START}/>}/>\n\n            <Route path={PATH.START} render={() => <Start/>}/>\n            <Route path={PATH.LOGIN} render={() => <Login/>}/>\n            <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\n            <Route path={PATH.CHARTS} render={() => <Charts/>}/>\n            <Route path={PATH.CURRENCY} render={() => <Currency/>}/>\n\n            <Route render={() => <Error404/>}/>\n\n          </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport Header from './header/Header';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n        <HashRouter>\n          <Header/>\n          <Routes/>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware, Store} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport thunk from \"redux-thunk\"\n\nimport {currencyListReducer} from \"./currencyListReducer\";\nimport {currencyChartReducer} from \"./currencyChartReducer\";\n\nconst rootReducer = combineReducers({\n    currencyListReducer: currencyListReducer,\n    currencyChartReducer: currencyChartReducer\n});\n\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport default store\n\nexport type AppStoreType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./n1-main/m2-bll/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}